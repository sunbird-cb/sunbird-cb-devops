---
    - name: User Count API call
      uri:
        url: "{{ domaines }}/{{ user_index }}/_search"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body: "{{ usercount_body }}"
        status_code: 200
      register: user_out
      until: user_out is not failed
      retries: 10
      delay: 2

    - name: Count Output
      set_fact:
        user_count:  "{{ user_out.json.hits.total }}"
      failed_when:
        -  user_count == "0"

    - debug:
        var: user_count

    - name: Total no. of Organizations API call
      uri:
        url: "{{ domaines }}/{{ org_index }}/_search"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body: "{{ orgcount_body }}"
        status_code: [201,200,302,308]
      register: org_out
      until: org_out is not failed
      retries: 10
      delay: 2

    - name: Organization Count
      set_fact:
        organization_count: "{{ org_out.json.hits.total }}"
      failed_when:
        -  organization_count == "0"

    - debug:
        var: organization_count

    - name: Live Course Query Elasticsearch and Process Response
      uri:
        url: "{{ domaines }}/{{ compositesearch }}/_search"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body: "{{ live_course_api_body }}"
        status_code: [201,200,302,308]
      register: live_course_output
      until: live_course_output is not failed
      retries: 10
      delay: 2

    - name: Extract Document Count and Aggregate Duration
      set_fact:
        live_course_count: "{{ live_course_output.json.hits.total }}"
      failed_when:
        -  live_course_count == "0"

    - name: course list
      set_fact:
        course_list: "{{ live_course_output.json.hits.hits | map(attribute='_source.duration') | list }}"

    - debug:
        var: course_list

    - name: Total Sum of Duration
      set_fact:
        aggregated_course_duration_float: "{{ course_list | map('int') | sum / 3600 | float  }}"

    - name: Total Sum of Round Off value
      set_fact:
        aggregated_course_duration: "{{ aggregated_course_duration_float | float | round | int }}"
      failed_when:
        - aggregated_course_duration == "0"

    - debug:
        var: aggregated_course_duration

    - name: Display Results
      debug:
        msg:
          - "Total Live Course Count: {{ live_course_count }}"
          - "Aggregated Duration: {{ aggregated_course_duration }}"

    - debug:
        msg: "{{ user_count }}, {{ organization_count }}, {{ aggregated_course_duration }}, {{ live_course_count }}"

    - name: Apply Page Template
      template:
        src: configurations.json.j2
        dest: "{{ helm_env_file_name }}"

    - name: create backup dir if not exist
      file:
        path: /var/lib/jenkins/dashbord_history
        state: directory

    - name: Gather date and time only
      setup:
        gather_subset:
          - "date_time"
          - "!min"
      when: ansible_date_time is not defined

    - name: create a backup of configfile
      copy:
        src: "{{ helm_env_file_name }}"
        dest: "/var/lib/jenkins/dashbord_history/configurations.json_{{ ansible_date_time.date }}"
        backup: yes

    - name: create config configmap
      shell: find "{{ helm_env_file_location }}" -iname "configurations.json" -exec /bin/bash -c "ls {}; kubectl create configmap static-domain-configurations-json --from-file={} -n {{namespace}} --dry-run -o=yaml | kubectl apply -f - " \;
